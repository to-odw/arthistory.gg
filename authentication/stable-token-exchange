<script src="https://sdk.amazonaws.com/js/aws-sdk-2.1066.0.min.js"></script>
<script>
  // Step 1: Extract the authorization code from the URL
  function getCodeFromUrl() {
    console.log("Extracting authorization code from URL...");
    const params = new URLSearchParams(window.location.search);
    const code = params.get('code');  // Extract the 'code' parameter from the query string

    if (code) {
      console.log("Authorization code successfully extracted:", code);  // Log the extracted authorization code
    } else {
      console.warn("No authorization code found in the URL.");  // Warn if no code is present in the URL
    }

    return code;
  }

  // Step 2: Exchange the authorization code for tokens
  function exchangeCodeForTokens(code) {
    console.log("Exchanging authorization code for tokens...");

    const data = {
      grant_type: 'authorization_code',
      client_id: '6rc7lmrksbd9pn9245e005lmr',  // Your Cognito App Client ID
      code: code,
      redirect_uri: 'https://arthistory.gg/account'  // Your actual redirect URI, make sure it's configured in Cognito https://join.arthistory.gg/oauth2/idpresponse
    };

    // Use your custom Cognito domain
    fetch('https://join.arthistory.gg/oauth2/token', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded'
      },
      body: new URLSearchParams(data)
    })
    .then(response => response.json())
    .then(tokens => {
      console.log("Tokens received:", tokens);  // Log the tokens received from Cognito
      const idToken = tokens.id_token;  // Extract the ID token

      if (idToken) {
        console.log("ID token extracted:", idToken);
        federateWithCognito(idToken);  // Proceed with federation using the ID token
      } else {
        console.error("No ID token found in the token response.");
      }
    })
    .catch(err => {
      console.error("Error exchanging authorization code for tokens:", err);
    });
  }


  // Step 3: Use the ID token to configure the Identity Pool and get AWS credentials
  function federateWithCognito(idToken) {
    console.log("Federating with Cognito Identity Pool using the ID token...");

    AWS.config.region = 'us-east-2';  // Your AWS region
    AWS.config.credentials = new AWS.CognitoIdentityCredentials({
      IdentityPoolId: 'us-east-2:0bf45b5f-b049-4621-832e-a3b44f3a3471',  // Your Identity Pool ID
      Logins: {
        'cognito-idp.us-east-2.amazonaws.com/us-east-2_pjX96kwEZ': idToken  // Replace with your User Pool ID
      }
    });

    AWS.config.credentials.get(function(err) {
      if (err) {
        console.error("Error getting AWS credentials:", err);
        return;
      }

      console.log("Successfully retrieved AWS credentials.");
      console.log("Cognito Identity ID:", AWS.config.credentials.identityId);  // Log the Cognito Identity ID
    });
  }

  // Step 4: Run the process when the page loads
  window.onload = function() {
    console.log("Page loaded. Checking for authorization code in the URL...");

    const code = getCodeFromUrl();  // Extract the authorization code from the URL
    
    if (code) {
      exchangeCodeForTokens(code);  // If a code is found, exchange it for tokens
    } else {
      console.error("No authorization code found in the URL. Cannot proceed with token exchange.");
    }
  };
</script>
